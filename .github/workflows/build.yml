---
name: Build image
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: "05 10 * * *"  # 10:05am UTC every day.
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'

env:
  IMAGE_NAME: "rouge"
  IMAGE_DESC: "The indestructible operating system"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"
  CENTOS_VERSION: 42
  DEFAULT_TAG: "latest"

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Maximize build space
      #   uses: ublue-os/remove-unwanted-software@v7
      #   with:
      #     remove-codeql: true

      - name: Image metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          tags: |
            type=raw,value=latest
            type=raw,value={{date 'YYYYMMDD'}}
            type=ref,event=pr
            type=sha
          labels: |
            containers.bootc=1
          sep-tags: " "
          sep-annotations: " "

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          oci: false

      - name: Run rechunker
        id: rechunk
        uses: hhd-dev/rechunk@v1.2.1
        with:
          rechunk: "ghcr.io/hhd-dev/rechunk:v1.2.1"
          ref: "${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}"
          prev-ref: "${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}"
          version: ${{ env.CENTOS_VERSION }}
          labels: ${{ steps.metadata.outputs.labels }}
          skip_compression: true

      - name: Load in podman and tag
        run: |
          IMAGE=$(podman pull ${{ steps.rechunk.outputs.ref }})
          sudo rm -rf ${{ steps.rechunk.outputs.output }}
          for tag in ${{ steps.metadata.outputs.tags }}; do
            podman tag $IMAGE ${{ env.IMAGE_NAME }}:$tag
          done

      # Only on "main".
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Only on "main".
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        id: push
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.metadata.outputs.tags }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      # Only on "main".
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.8.1
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)

      # Only on "main".
      - name: Sign container image
        if: github.event_name != 'pull_request' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          IMAGE_FULL="${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}"
          for tag in ${{ steps.metadata.outputs.tags }}; do
            cosign sign -y --key env://COSIGN_PRIVATE_KEY $IMAGE_FULL:$tag
          done
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}